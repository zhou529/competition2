<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zln.competition.mapper.RecommendMapper">
    <resultMap id="BaseResultMap" type="com.zln.competition.bean.Recommend">
        <id column="Rec_id" property="recId"></id>
        <result column="Rec_name" property="recName"></result>
        <result column="Rec_beginTime" property="recBegintime"></result>
        <result column="Rec_endTime" property="recEndtime"></result>
        <result column="Rec_organizer" property="recOrganizer"></result>
        <result column="Rec_browse" property="recBrowse"></result>
        <result column="rec_information" property="recInformation"></result>
        <result column="Rec_img" property="recImg"></result>
        <result column="Rec_time" property="recTime"></result>
        <result column="Com_id" property="comId"></result>
        <result column="tag_id" property="comId"></result>
        <collection property="community" javaType="list" ofType="Community">
            <id column="Com_id" property="comId"></id>
            <result column="Com_information" property="comInformation"></result>
            <result column="Com_win" property="comWin"></result>
            <result column="Com_winImg" property="comWinimg"></result>
            <result column="Com_img" property="comImg"></result>
            <result column="Com_qq" property="comQq"></result>
            <result column="Com_name" property="comName"></result>
        </collection>
        <!--        <association column="Com_Id" property="com.zln.competition.bean.Community.comId"-->
        <!--                     javaType="com.zln.competition.bean.Community"-->
        <!--                     select="com.zln.competition.mapper.CommunityMapper.selectByComId" fetchType="eager"></association>-->
    </resultMap>
    <sql id="Base_Column_List">
        Rec_id
        , Rec_name, Rec_beginTime, Rec_endTime, Rec_organizer, Rec_browse,
    rec_information, Rec_img, Rec_time, Com_id, tag_id
    </sql>

    <!-- int allDeleteRecommend(Integer recId);-->
    <delete id="allDeleteRecommend" parameterType="java.lang.Integer">
        delete from recommend
    </delete>

<!--    int deleteByRecId(Integer recId);-->
    <delete id="deleteByRecId" parameterType="java.lang.Integer">
        delete from recommend
        where Rec_id = #{recId,jdbcType=INTEGER}
    </delete>

<!--    List<Recommend> selectByTag();-->
    <select id="selectByTag" resultMap="BaseResultMap">
        SELECT recommend.* FROM recommend
        JOIN
            (
                SELECT tag.tag_id, User_major FROM user_info JOIN tag ON tag.Rec_tag = user_info.User_major
                WHERE User_openid = #{userOpenid,jdbcType=VARCHAR}
            ) AS t
        ON  recommend.tag_id = t.tag_id
    </select>

    <!--    List<Recommend> selectRecommendByComId(Integer comId);-->
    <select id="selectRecommendByComId" resultMap="BaseResultMap">
        select
        <!--        <include refid="Base_Column_List"/>-->
        *
        from recommend,community
        where recommend.Com_id = community.Com_id
        and recommend.Com_id = #{recId,jdbcType=INTEGER}
    </select>



<!--    List<Recommend> selectRecommendDim(Recommend recommend);-->
    <select id="selectRecommendDim" resultMap="BaseResultMap">
        select
         <include refid="Base_Column_List"/>
        from recommend
        where recommend.Rec_name like #{recName,jdbcType=VARCHAR}
    </select>


    <!--    public List<Recommend> selectAllRecommend();-->
    <select id="selectAllRecommend" resultMap="BaseResultMap">
        select
        <!--        <include refid="Base_Column_List"/>-->
        *
        from recommend,community
        where recommend.Com_id = community.Com_id
    </select>

    <!--    public Recommend selectRecommendAndCommunityByRecName(String recName);-->
    <select id="selectRecommendAndCommunityByRecName" resultMap="BaseResultMap">
        select
        <!--        <include refid="Base_Column_List"/>-->
        *
        from recommend,community
        where recommend.Com_id = community.Com_id
        and recommend.Rec_name = #{recName,jdbcType=VARCHAR}
    </select>

<!--    public List<Recommend> selectRecommendByRecName(String recName);-->
    <select id="selectRecommendByRecName" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from recommend
        where recommend.Rec_name = #{recName,jdbcType=VARCHAR}
     </select>

    <!--    public Recommend selectRecommendById(Integer id);-->
    <select id="selectRecommendById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from recommend
        where recommend.Rec_id = #{recId,jdbcType=INTEGER}
    </select>

<!--    int insertRecommend(Recommend recommend);-->
    <insert id="insertRecommend" parameterType="com.zln.competition.bean.Recommend">
        insert into recommend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="recId != null">
                Rec_id,
            </if>
            <if test="recName != null">
                Rec_name,
            </if>
            <if test="recBegintime != null">
                Rec_beginTime,
            </if>
            <if test="recEndtime != null">
                Rec_endTime,
            </if>
            <if test="recOrganizer != null">
                Rec_organizer,
            </if>
            <if test="recBrowse != null">
                Rec_browse,
            </if>
            <if test="recInformation != null">
                rec_information,
            </if>
            <if test="recImg != null">
                Rec_img,
            </if>
            <if test="recTime != null">
                Rec_time,
            </if>
            <if test="comId != null">
                Com_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="recId != null">
                #{recId,jdbcType=INTEGER},
            </if>
            <if test="recName != null">
                #{recName,jdbcType=VARCHAR},
            </if>
            <if test="recBegintime != null">
                #{recBegintime,jdbcType=VARCHAR},
            </if>
            <if test="recEndtime != null">
                #{recEndtime,jdbcType=VARCHAR},
            </if>
            <if test="recOrganizer != null">
                #{recOrganizer,jdbcType=VARCHAR},
            </if>
            <if test="recBrowse != null">
                #{recBrowse,jdbcType=INTEGER},
            </if>
            <if test="recInformation != null">
                #{recInformation,jdbcType=VARCHAR},
            </if>
            <if test="recImg != null">
                #{recImg,jdbcType=VARCHAR},
            </if>
            <if test="recTime != null">
                #{recTime,jdbcType=VARCHAR},
            </if>
            <if test="comId != null">
                #{comId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                #{tagId},
            </if>
        </trim>
    </insert>

<!--    int updateRecommendBrowseByRecIdWX(Recommend record);-->
    <update id="updateRecommendBrowseByRecIdWX" parameterType="com.zln.competition.bean.Recommend">
        update recommend
        set  Rec_browse = Rec_browse+1
        where Rec_id = #{recId,jdbcType=INTEGER}
    </update>


    <!--    int updateRecommendByRecId(Recommend record);-->
    <update id="updateRecommendByRecId">
        update recommend
        <set>
            <if test="recName != null">
                Rec_name = #{recName,jdbcType=VARCHAR},
            </if>
            <if test="recBegintime != null">
                Rec_beginTime = #{recBegintime,jdbcType=VARCHAR},
            </if>
            <if test="recEndtime != null">
                Rec_endTime = #{recEndtime,jdbcType=VARCHAR},
            </if>
            <if test="recOrganizer != null">
                Rec_organizer = #{recOrganizer,jdbcType=VARCHAR},
            </if>
            <if test="recBrowse != null">
                Rec_browse = #{recBrowse,jdbcType=INTEGER},
            </if>
            <if test="recInformation != null">
                rec_information = #{recInformation,jdbcType=VARCHAR},
            </if>
            <if test="recImg != null">
                Rec_img = #{recImg,jdbcType=VARCHAR},
            </if>
            <if test="recTime != null">
                Rec_time = #{recTime,jdbcType=VARCHAR},
            </if>
            <if test="comId != null">
                Com_id = #{comId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                tag_id = #{comId,jdbcType=INTEGER},
            </if>
        </set>
        where Rec_id = #{recId,jdbcType=INTEGER}
    </update>

<!--    List<Recommend> hot_category();-->
    <select id="hot_category" resultMap="BaseResultMap">
        SELECT Rec_tag AS Rec_name, SUM(Rec_browse) AS Rec_browse FROM recommend
        JOIN tag ON tag.tag_id = recommend.tag_id
        GROUP BY recommend.tag_id;
    </select>

<!--    List<Recommend> recommend_race();-->
    <select id="recommend_race" resultMap="BaseResultMap">
        SELECT Rec_tag AS Rec_name, number AS Rec_browse  FROM tag
        JOIN
        (
            SELECT tag_id, COUNT(*) AS number FROM recommend
            GROUP BY tag_id

        ) AS a
        ON  a.tag_id = tag.tag_id WHERE  a.tag_id != 0
    </select>

<!--    List<Recommend> recommend_number_for_community();-->
    <select id="recommend_number_for_community" resultMap="BaseResultMap">
        SELECT  Com_name as Rec_name, COUNT(*)  as Rec_browse FROM recommend
        JOIN community ON community.Com_id = recommend.Com_id
        WHERE community.Com_id != 0
        GROUP BY community.Com_name
    </select>

</mapper>