<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zln.competition.mapper.PayStoreMapper">
    <resultMap id="BaseResultMap" type="com.zln.competition.bean.PayStore">
        <constructor>
            <idArg column="product_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="product_name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="exchanged_pay" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="product_img" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="exchange_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        product_id, product_name, exchanged_pay, product_img, exchange_number
    </sql>
<!--    List<PayStore> selectAllPayStore()-->
    <select id="selectAllPayStore" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from pay_store
    </select>
<!--    int updateExchangeNumber(Integer productId);-->
    <update id="updateExchangeNumber" parameterType="java.lang.Integer">
        update pay_store
        set exchange_number = exchange_number + 1
        where product_id = #{productId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from pay_store
        where product_id = #{productId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from pay_store
        where product_id = #{productId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zln.competition.bean.PayStore">
        insert into pay_store (product_id, product_name, exchanged_pay,
                               product_img, exchange_number)
        values (#{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{exchangedPay,jdbcType=INTEGER},
                #{productImg,jdbcType=VARCHAR}, #{exchangeNumber,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zln.competition.bean.PayStore">
        insert into pay_store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="exchangedPay != null">
                exchanged_pay,
            </if>
            <if test="productImg != null">
                product_img,
            </if>
            <if test="exchangeNumber != null">
                exchange_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="exchangedPay != null">
                #{exchangedPay,jdbcType=INTEGER},
            </if>
            <if test="productImg != null">
                #{productImg,jdbcType=VARCHAR},
            </if>
            <if test="exchangeNumber != null">
                #{exchangeNumber,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


<!--    int updateByPayStore(PayStore record);-->
    <update id="updateByPayStore" parameterType="com.zln.competition.bean.PayStore">
        update pay_store
        <set>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="exchangedPay != null">
                exchanged_pay = #{exchangedPay,jdbcType=INTEGER},
            </if>
            <if test="productImg != null">
                product_img = #{productImg,jdbcType=VARCHAR},
            </if>
        </set>
        where product_name = #{productName,jdbcType=VARCHAR}
        and exchanged_pay = #{exchangedPay,jdbcType=INTEGER}
        and product_img = #{productImg,jdbcType=VARCHAR}

    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.zln.competition.bean.PayStore">
        update pay_store
        <set>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="exchangedPay != null">
                exchanged_pay = #{exchangedPay,jdbcType=INTEGER},
            </if>
            <if test="productImg != null">
                product_img = #{productImg,jdbcType=VARCHAR},
            </if>
            <if test="exchangeNumber != null">
                exchange_number = #{exchangeNumber,jdbcType=INTEGER},
            </if>
        </set>
        where product_id = #{productId,jdbcType=INTEGER}
    </update>

<!--    int updateImgById(PayStore record);-->
    <update id="updateImgById">
        update pay_store
        set
            product_img = #{productImg,jdbcType=VARCHAR}
        where product_id = #{productId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.zln.competition.bean.PayStore">
        update pay_store
        set product_name = #{productName,jdbcType=VARCHAR},
            exchanged_pay = #{exchangedPay,jdbcType=INTEGER},
            product_img = #{productImg,jdbcType=VARCHAR},
            exchange_number = #{exchangeNumber,jdbcType=INTEGER}
        where product_id = #{productId,jdbcType=INTEGER}
    </update>
</mapper>